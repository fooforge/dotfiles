[user]
    name = Mike Adolphs
    email = mike@fooforge.com
[core]
    editor = subl -w

[alias]
    # View the SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph
    # View the current working tree status using the short format
    s = status -s
    st = status
    # Diff
    di = diff --patch-with-stat
    # Pull in remote changes for the current repository and all its submodules
    pu = push
    # Commit something
    ci = commit
    # Clone a repository including all submodules
    cl = clone --recursive
    # Checkout a local branch
    co = checkout
    # Switch to a branch, creating it if necessary
    go = checkout -B
    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v
    # Credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
    # Undo a `git push`
    undopush = push -f origin HEAD^:master
    # Rather praise than blame!
    praise = blame
    # Pimp my ride for `git log`
    plog = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes

[color]
    # Use colors in Git commands that are capable of colored output when outputting to the terminal
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    tool = opendiff
    log = true

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
    remote = origin
    merge = refs/heads/master

[instaweb]
    httpd = webrick
